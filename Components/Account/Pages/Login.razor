@page "/Account/Login"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using JobApplicationTrackerV2.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<!DOCTYPE html>
<html>
<head>
    <title>Logga in</title>
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
</head>
<body>
    <div style="max-width: 400px; margin: 100px auto; padding: 20px;">
        <h2>Logga in</h2>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div style="color: red; margin-bottom: 10px;">@ErrorMessage</div>
        }

        <form method="post" action="/Account/PerformLogin">
            <AntiforgeryToken />
            <input type="hidden" name="returnUrl" value="@ReturnUrl" />

            <div style="margin-bottom: 15px;">
                <label>E-post:</label><br />
                <input type="email" name="email" required style="width: 100%; padding: 8px;" />
            </div>

            <div style="margin-bottom: 15px;">
                <label>Lösenord:</label><br />
                <input type="password" name="password" required style="width: 100%; padding: 8px;" />
            </div>

            <div style="margin-bottom: 15px;">
                <label>
                    <input type="checkbox" name="rememberMe" value="true" />
                    Kom ihåg mig
                </label>
            </div>

            <button type="submit" style="width: 100%; padding: 10px; background: #0066cc; color: white; border: none; cursor: pointer;">
                Logga in
            </button>

            <div style="margin-top: 15px;">
                <a href="Account/Register">Registrera ny användare</a>
            </div>
        </form>
    </div>
</body>
</html>

@code {
    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    [SupplyParameterFromQuery(Name = "error")]
    private string? Error { get; set; }

    private string? ErrorMessage => Error == "invalid" ? "Ogiltigt inloggningsförsök." : null;
}